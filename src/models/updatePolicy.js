const mongoose = require("mongoose");

const updatePolicySchema = {
  propertyType: { type: String },
  resedentialPlot: {
    resedentialPlot: { type: Boolean },
    minimumRate: { type: String },
    minimumFees: { type: Number },
    maximumLtv: { type: String },
    maximumTenure: { type: Number },
  },
  resPlotCons: {
    resPlotCons: { type: Boolean },
    minimumRate: { type: String },
    minimumFees: { type: Number },
    maximumLtv: { type: String },
    maximumTenure: { type: Number },
  },
  commercialPlot: {
    commercialPlot: { type: Boolean },
    minimumRate: { type: String },
    minimumFees: { type: Number },
    maximumLtv: { type: String },
    maximumTenure: { type: Number },
  },
  commercialCons: {
    commPlotCons: { type: Boolean },
    minimumRate: { type: String },
    minimumFees: { type: Number },
    maximumLtv: { type: String },
    maximumTenure: { type: Number },
  },
  institutionalPlot: {
    institutionalPlot: { type: Boolean },
    minimumRate: { type: String },
    minimumFees: { type: Number },
    maximumLtv: { type: String },
    maximumTenure: { type: Number },
  },
  institutionalCons: {
    institutionalCons: { type: Boolean },
    minimumRate: { type: String },
    minimumFees: { type: Number },
    maximumLtv: { type: String },
    maximumTenure: { type: Number },
  },
  rentOrLeased: {
    rentOrLeased: { type: Boolean },
    minimumRate: { type: String },
    minimumFees: { type: Number },
    maximumLtv: { type: String },
    maximumTenure: { type: Number },
  },
  underConstruction: {
    underConstruction: { type: Boolean },
    minimumRate: { type: String },
    minimumFees: { type: Number },
    maximumLtv: { type: String },
    maximumTenure: { type: Number },
  },
  lalDoraRegis: {
    lalDoraRegis: { type: Boolean },
    minimumRate: { type: String },
    minimumFees: { type: Number },
    maximumLtv: { type: String },
    maximumTenure: { type: Number },
  },
  lalDoraKhasra: {
    lalDoraKhasra: { type: Boolean },
    minimumRate: { type: String },
    minimumFees: { type: Number },
    maximumLtv: { type: String },
    maximumTenure: { type: Number },
  },
  university: {
    university: { type: Boolean },
    minimumRate: { type: String },
    minimumFees: { type: Number },
    maximumLtv: { type: String },
    maximumTenure: { type: Number },
  },
  college: {
    college: { type: Boolean },
    minimumRate: { type: String },
    minimumFees: { type: Number },
    maximumLtv: { type: String },
    maximumTenure: { type: Number },
  },
  senSecSchool: {
    senSecSchool: { type: Boolean },
    minimumRate: { type: String },
    minimumFees: { type: Number },
    maximumLtv: { type: String },
    maximumTenure: { type: Number },
  },
  elementarySchool: {
    elementarySchool: { type: Boolean },
    minimumRate: { type: String },
    minimumFees: { type: Number },
    maximumLtv: { type: String },
    maximumTenure: { type: Number },
  },
  primarySchool: {
    primarySchool: { type: Boolean },
    minimumRate: { type: String },
    minimumFees: { type: Number },
    maximumLtv: { type: String },
    maximumTenure: { type: Number },
  },
  otherSchool: {
    otherSchool: { type: Boolean },
    minimumRate: { type: String },
    minimumFees: { type: Number },
    maximumLtv: { type: String },
    maximumTenure: { type: Number },
  },
  subDividedProp: {
    subDevidedProp: { type: Boolean },
    minimumRate: { type: String },
    minimumFees: { type: Number },
    maximumLtv: { type: String },
    maximumTenure: { type: Number },
  },
  subDividedResCommIndustri: {
    subDividedResCommIndustri: { type: Boolean },
    minimumRate: { type: String },
    minimumFees: { type: Number },
    maximumLtv: { type: String },
    maximumTenure: { type: Number },
  },
  wareHouse: {
    wareHouse: { type: Boolean },
    minimumRate: { type: String },
    minimumFees: { type: Number },
    maximumLtv: { type: String },
    maximumTenure: { type: Number },
  },
  wareHouseCons: {
    wareHouseCons: { type: Boolean },
    minimumRate: { type: String },
    minimumFees: { type: Number },
    maximumLtv: { type: String },
    maximumTenure: { type: Number },
  },
  hospital: {
    hospital: { type: Boolean },
    minimumRate: { type: String },
    minimumFees: { type: Number },
    maximumLtv: { type: String },
    maximumTenure: { type: Number },
  },
  nursingHome: {
    nursingHome: { type: Boolean },
    minimumRate: { type: String },
    minimumFees: { type: Number },
    maximumLtv: { type: String },
    maximumTenure: { type: Number },
  },
  propWithOutMap: {
    propWithOutMap: { type: Boolean },
    minimumRate: { type: String },
    minimumFees: { type: Number },
    maximumLtv: { type: String },
    maximumTenure: { type: Number },
  },
  standAloneBaseComm: {
    standAloneBaseComm: { type: Boolean },
    minimumRate: { type: String },
    minimumFees: { type: Number },
    maximumLtv: { type: String },
    maximumTenure: { type: Number },
  },
  standAloneBaseResi: {
    standAloneBaseResi: { type: Boolean },
    minimumRate: { type: String },
    minimumFees: { type: Number },
    maximumLtv: { type: String },
    maximumTenure: { type: Number },
  },
  commMultiTenants: {
    commMultiTenants: { type: Boolean },
    minimumRate: { type: String },
    minimumFees: { type: Number },
    maximumLtv: { type: String },
    maximumTenure: { type: Number },
  },
  pgAndHostel: {
    pgAndHostel: { type: Boolean },
    minimumRate: { type: String },
    minimumFees: { type: Number },
    maximumLtv: { type: String },
    maximumTenure: { type: Number },
  },
  propCompanyName: {
    propCompanyName: { type: Boolean },
    minimumRate: { type: String },
    minimumFees: { type: Number },
    maximumLtv: { type: String },
    maximumTenure: { type: Number },
  },
  sellerBt: {
    sellerBt: { type: Boolean },
    minimumRate: { type: String },
    minimumFees: { type: Number },
    maximumLtv: { type: String },
    maximumTenure: { type: Number },
  },
};

module.exports = mongoose.model("updatepolicy", updatePolicySchema);
